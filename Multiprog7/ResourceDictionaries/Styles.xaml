<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="WinAll" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="/Resources/Fonts/Inter-Regular.ttf #Inter" />
    </Style>

    <Style x:Key="PageFont" TargetType="{x:Type Page}">
        <Setter Property="FontFamily" Value="/Resources/Fonts/Inter-Regular.ttf #Inter" />
    </Style>
    <Style x:Key="UcFont" TargetType="{x:Type UserControl}">
        <Setter Property="Foreground" Value="#828282"/>
        <Setter Property="FontFamily" Value="/Resources/Fonts/Inter-Regular.ttf #Inter" />
    </Style>
    
    <Style x:Key="BtnActiveMode" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"
                            Background="#486FEF"
                            BorderThickness="0">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BtnInactiveMode" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#486FEF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"
                            Background="White"
                            BorderBrush="#486FEF"
                            BorderThickness="1">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BtnUpdateEnabled" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#486FEF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"
                            Background="#6FCF97"
                            BorderThickness="1">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BtnUpdateDisabled" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#486FEF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"
                            Background="#E0E0E0"
                            BorderThickness="1">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LbHeader" TargetType="Label">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="#4F4F4F"/>
        <Setter Property="Margin" Value="10 0"/>
    </Style>

    <Style x:Key="TbHeader" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="#4F4F4F"/>
        <Setter Property="Margin" Value="10 0"/>
    </Style>
    
    <Style x:Key="LbForCharts" TargetType="Label">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Resources/#Inter"/>
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid >
                        <Border Name="HeaderBorder" 
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}" 
                                Width="{TemplateBinding Width}"
                                BorderThickness="0,0,1,0"
                                CornerRadius="0,10,0,0">
                            <ContentPresenter Name="HeaderContent" 
                                              TextElement.Foreground="White" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="False" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ManualMode" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid >
                        <Border Name="HeaderBorder" 
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}" 
                                Width="{TemplateBinding Width}"
                                BorderThickness="0,0,0,1"
                                BorderBrush="#EAEEF1">
                            <ContentPresenter Name="HeaderContent" 
                                              TextElement.Foreground="#828282" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="False" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomProgressBar"  TargetType="{x:Type ProgressBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="#486fef"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Height="{TemplateBinding Height}">
                            <Border Background="#F2F2F2" CornerRadius="7"/>
                            <Grid Margin="-1">
                                <Border x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1"/>
                                        <ColumnDefinition x:Name="width2" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Animation"  RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Border Background="{TemplateBinding Background}" CornerRadius="7"/>

                                    </Grid>
                                </Grid>

                            </Grid>

                        </Grid>
                        <!--Костыль-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="140" ></ColumnDefinition>
                                <ColumnDefinition Width="140" ></ColumnDefinition>
                                <ColumnDefinition Width="140"></ColumnDefinition>
                                <ColumnDefinition Width="140"></ColumnDefinition>
                                <ColumnDefinition Width="140"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="5" BorderBrush="#F2F2F2" Width="4" Height="{TemplateBinding Height}" Margin="65 0"></Border>
                            <Border Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="5" BorderBrush="#F2F2F2" Width="4" Height="{TemplateBinding Height}" Margin="65 0"></Border>
                            <Border Grid.Column="2" Grid.ColumnSpan="2" BorderThickness="5" BorderBrush="#F2F2F2" Width="4" Height="{TemplateBinding Height}" Margin="65 0"></Border>
                            <Border Grid.Column="3" Grid.ColumnSpan="2" BorderThickness="5" BorderBrush="#F2F2F2" Width="4" Height="{TemplateBinding Height}" Margin="65 0"></Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#c5c5c5"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="width1" Property="Width" Value="0.25*"/>
                            <Setter TargetName="width2" Property="Width" Value="0.725*"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="#486FEF" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="5" CornerRadius="5" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="#486FEF"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="#486FEF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>